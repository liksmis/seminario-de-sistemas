#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hotel2012.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hotel2012")]
	public partial class coneccionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertagencia(agencia instance);
    partial void Updateagencia(agencia instance);
    partial void Deleteagencia(agencia instance);
    partial void InsertApplications(Applications instance);
    partial void UpdateApplications(Applications instance);
    partial void DeleteApplications(Applications instance);
    partial void Insertcategoria(categoria instance);
    partial void Updatecategoria(categoria instance);
    partial void Deletecategoria(categoria instance);
    partial void Insertciudad(ciudad instance);
    partial void Updateciudad(ciudad instance);
    partial void Deleteciudad(ciudad instance);
    partial void Insertcliente(cliente instance);
    partial void Updatecliente(cliente instance);
    partial void Deletecliente(cliente instance);
    partial void Insertconsumo(consumo instance);
    partial void Updateconsumo(consumo instance);
    partial void Deleteconsumo(consumo instance);
    partial void Insertempresa(empresa instance);
    partial void Updateempresa(empresa instance);
    partial void Deleteempresa(empresa instance);
    partial void Insertestado(estado instance);
    partial void Updateestado(estado instance);
    partial void Deleteestado(estado instance);
    partial void Inserthabitacion(habitacion instance);
    partial void Updatehabitacion(habitacion instance);
    partial void Deletehabitacion(habitacion instance);
    partial void InsertMemberships(Memberships instance);
    partial void UpdateMemberships(Memberships instance);
    partial void DeleteMemberships(Memberships instance);
    partial void Insertpais(pais instance);
    partial void Updatepais(pais instance);
    partial void Deletepais(pais instance);
    partial void Insertpersona(persona instance);
    partial void Updatepersona(persona instance);
    partial void Deletepersona(persona instance);
    partial void InsertProfiles(Profiles instance);
    partial void UpdateProfiles(Profiles instance);
    partial void DeleteProfiles(Profiles instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void Insertservicios(servicios instance);
    partial void Updateservicios(servicios instance);
    partial void Deleteservicios(servicios instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertUsersInRoles(UsersInRoles instance);
    partial void UpdateUsersInRoles(UsersInRoles instance);
    partial void DeleteUsersInRoles(UsersInRoles instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    partial void Insertreserva(reserva instance);
    partial void Updatereserva(reserva instance);
    partial void Deletereserva(reserva instance);
    #endregion
		
		public coneccionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public coneccionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public coneccionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public coneccionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public coneccionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<agencia> agencia
		{
			get
			{
				return this.GetTable<agencia>();
			}
		}
		
		public System.Data.Linq.Table<Applications> Applications
		{
			get
			{
				return this.GetTable<Applications>();
			}
		}
		
		public System.Data.Linq.Table<categoria> categoria
		{
			get
			{
				return this.GetTable<categoria>();
			}
		}
		
		public System.Data.Linq.Table<ciudad> ciudad
		{
			get
			{
				return this.GetTable<ciudad>();
			}
		}
		
		public System.Data.Linq.Table<cliente> cliente
		{
			get
			{
				return this.GetTable<cliente>();
			}
		}
		
		public System.Data.Linq.Table<consumo> consumo
		{
			get
			{
				return this.GetTable<consumo>();
			}
		}
		
		public System.Data.Linq.Table<empresa> empresa
		{
			get
			{
				return this.GetTable<empresa>();
			}
		}
		
		public System.Data.Linq.Table<estado> estado
		{
			get
			{
				return this.GetTable<estado>();
			}
		}
		
		public System.Data.Linq.Table<habitacion> habitacion
		{
			get
			{
				return this.GetTable<habitacion>();
			}
		}
		
		public System.Data.Linq.Table<habitacion_posee_servicio> habitacion_posee_servicio
		{
			get
			{
				return this.GetTable<habitacion_posee_servicio>();
			}
		}
		
		public System.Data.Linq.Table<Memberships> Memberships
		{
			get
			{
				return this.GetTable<Memberships>();
			}
		}
		
		public System.Data.Linq.Table<pais> pais
		{
			get
			{
				return this.GetTable<pais>();
			}
		}
		
		public System.Data.Linq.Table<persona> persona
		{
			get
			{
				return this.GetTable<persona>();
			}
		}
		
		public System.Data.Linq.Table<Profiles> Profiles
		{
			get
			{
				return this.GetTable<Profiles>();
			}
		}
		
		public System.Data.Linq.Table<reserva_tiene_habitacion_tiene_consumo> reserva_tiene_habitacion_tiene_consumo
		{
			get
			{
				return this.GetTable<reserva_tiene_habitacion_tiene_consumo>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<servicios> servicios
		{
			get
			{
				return this.GetTable<servicios>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRoles> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRoles>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<reserva> reserva
		{
			get
			{
				return this.GetTable<reserva>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agencia")]
	public partial class agencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_agencia;
		
		private System.Nullable<long> _nit;
		
		private string _contacto;
		
		private System.Nullable<int> _codigo_cliente;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_agenciaChanging(int value);
    partial void Oncodigo_agenciaChanged();
    partial void OnnitChanging(System.Nullable<long> value);
    partial void OnnitChanged();
    partial void OncontactoChanging(string value);
    partial void OncontactoChanged();
    partial void Oncodigo_clienteChanging(System.Nullable<int> value);
    partial void Oncodigo_clienteChanged();
    #endregion
		
		public agencia()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_agencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_agencia
		{
			get
			{
				return this._codigo_agencia;
			}
			set
			{
				if ((this._codigo_agencia != value))
				{
					this.Oncodigo_agenciaChanging(value);
					this.SendPropertyChanging();
					this._codigo_agencia = value;
					this.SendPropertyChanged("codigo_agencia");
					this.Oncodigo_agenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="BigInt")]
		public System.Nullable<long> nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacto", DbType="VarChar(20)")]
		public string contacto
		{
			get
			{
				return this._contacto;
			}
			set
			{
				if ((this._contacto != value))
				{
					this.OncontactoChanging(value);
					this.SendPropertyChanging();
					this._contacto = value;
					this.SendPropertyChanged("contacto");
					this.OncontactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", DbType="Int")]
		public System.Nullable<int> codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_agencia", Storage="_cliente", ThisKey="codigo_cliente", OtherKey="codigo_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.agencia.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.agencia.Add(this);
						this._codigo_cliente = value.codigo_cliente;
					}
					else
					{
						this._codigo_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<Memberships> _Memberships;
		
		private EntitySet<Roles> _Roles;
		
		private EntitySet<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Applications()
		{
			this._Memberships = new EntitySet<Memberships>(new Action<Memberships>(this.attach_Memberships), new Action<Memberships>(this.detach_Memberships));
			this._Roles = new EntitySet<Roles>(new Action<Roles>(this.attach_Roles), new Action<Roles>(this.detach_Roles));
			this._Users = new EntitySet<Users>(new Action<Users>(this.attach_Users), new Action<Users>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(235) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Memberships", Storage="_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Memberships> Memberships
		{
			get
			{
				return this._Memberships;
			}
			set
			{
				this._Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Roles", Storage="_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Roles> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Users", Storage="_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Users> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Memberships(Memberships entity)
		{
			this.SendPropertyChanging();
			entity.Applications = this;
		}
		
		private void detach_Memberships(Memberships entity)
		{
			this.SendPropertyChanging();
			entity.Applications = null;
		}
		
		private void attach_Roles(Roles entity)
		{
			this.SendPropertyChanging();
			entity.Applications = this;
		}
		
		private void detach_Roles(Roles entity)
		{
			this.SendPropertyChanging();
			entity.Applications = null;
		}
		
		private void attach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Applications = this;
		}
		
		private void detach_Users(Users entity)
		{
			this.SendPropertyChanging();
			entity.Applications = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categoria")]
	public partial class categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_categoria;
		
		private string _tipo;
		
		private string _descripcion;
		
		private EntitySet<habitacion> _habitacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_categoriaChanging(int value);
    partial void Oncodigo_categoriaChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public categoria()
		{
			this._habitacion = new EntitySet<habitacion>(new Action<habitacion>(this.attach_habitacion), new Action<habitacion>(this.detach_habitacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_categoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_categoria
		{
			get
			{
				return this._codigo_categoria;
			}
			set
			{
				if ((this._codigo_categoria != value))
				{
					this.Oncodigo_categoriaChanging(value);
					this.SendPropertyChanging();
					this._codigo_categoria = value;
					this.SendPropertyChanged("codigo_categoria");
					this.Oncodigo_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(20)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoria_habitacion", Storage="_habitacion", ThisKey="codigo_categoria", OtherKey="codigo_categoria")]
		public EntitySet<habitacion> habitacion
		{
			get
			{
				return this._habitacion;
			}
			set
			{
				this._habitacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_habitacion(habitacion entity)
		{
			this.SendPropertyChanging();
			entity.categoria = this;
		}
		
		private void detach_habitacion(habitacion entity)
		{
			this.SendPropertyChanging();
			entity.categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudad")]
	public partial class ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_ciudad;
		
		private string _nombre;
		
		private System.Nullable<int> _codigo_pais;
		
		private EntitySet<cliente> _cliente;
		
		private EntityRef<pais> _pais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_ciudadChanging(int value);
    partial void Oncodigo_ciudadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Oncodigo_paisChanging(System.Nullable<int> value);
    partial void Oncodigo_paisChanged();
    #endregion
		
		public ciudad()
		{
			this._cliente = new EntitySet<cliente>(new Action<cliente>(this.attach_cliente), new Action<cliente>(this.detach_cliente));
			this._pais = default(EntityRef<pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_ciudad
		{
			get
			{
				return this._codigo_ciudad;
			}
			set
			{
				if ((this._codigo_ciudad != value))
				{
					this.Oncodigo_ciudadChanging(value);
					this.SendPropertyChanging();
					this._codigo_ciudad = value;
					this.SendPropertyChanged("codigo_ciudad");
					this.Oncodigo_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_pais", DbType="Int")]
		public System.Nullable<int> codigo_pais
		{
			get
			{
				return this._codigo_pais;
			}
			set
			{
				if ((this._codigo_pais != value))
				{
					if (this._pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_paisChanging(value);
					this.SendPropertyChanging();
					this._codigo_pais = value;
					this.SendPropertyChanged("codigo_pais");
					this.Oncodigo_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_cliente", Storage="_cliente", ThisKey="codigo_ciudad", OtherKey="codigo_ciudad")]
		public EntitySet<cliente> cliente
		{
			get
			{
				return this._cliente;
			}
			set
			{
				this._cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pais_ciudad", Storage="_pais", ThisKey="codigo_pais", OtherKey="codigo_pais", IsForeignKey=true)]
		public pais pais
		{
			get
			{
				return this._pais.Entity;
			}
			set
			{
				pais previousValue = this._pais.Entity;
				if (((previousValue != value) 
							|| (this._pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pais.Entity = null;
						previousValue.ciudad.Remove(this);
					}
					this._pais.Entity = value;
					if ((value != null))
					{
						value.ciudad.Add(this);
						this._codigo_pais = value.codigo_pais;
					}
					else
					{
						this._codigo_pais = default(Nullable<int>);
					}
					this.SendPropertyChanged("pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = this;
		}
		
		private void detach_cliente(cliente entity)
		{
			this.SendPropertyChanging();
			entity.ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cliente")]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_cliente;
		
		private string _nombre;
		
		private string _telefono;
		
		private string _email;
		
		private string _direccion;
		
		private string _estado;
		
		private string _comentario;
		
		private System.Nullable<int> _codigo_ciudad;
		
		private EntitySet<agencia> _agencia;
		
		private EntitySet<empresa> _empresa;
		
		private EntitySet<persona> _persona;
		
		private EntitySet<usuario> _usuario;
		
		private EntitySet<reserva> _reserva;
		
		private EntityRef<ciudad> _ciudad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_clienteChanging(int value);
    partial void Oncodigo_clienteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    partial void Oncodigo_ciudadChanging(System.Nullable<int> value);
    partial void Oncodigo_ciudadChanged();
    #endregion
		
		public cliente()
		{
			this._agencia = new EntitySet<agencia>(new Action<agencia>(this.attach_agencia), new Action<agencia>(this.detach_agencia));
			this._empresa = new EntitySet<empresa>(new Action<empresa>(this.attach_empresa), new Action<empresa>(this.detach_empresa));
			this._persona = new EntitySet<persona>(new Action<persona>(this.attach_persona), new Action<persona>(this.detach_persona));
			this._usuario = new EntitySet<usuario>(new Action<usuario>(this.attach_usuario), new Action<usuario>(this.detach_usuario));
			this._reserva = new EntitySet<reserva>(new Action<reserva>(this.attach_reserva), new Action<reserva>(this.detach_reserva));
			this._ciudad = default(EntityRef<ciudad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(20)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(20)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20)")]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_ciudad", DbType="Int")]
		public System.Nullable<int> codigo_ciudad
		{
			get
			{
				return this._codigo_ciudad;
			}
			set
			{
				if ((this._codigo_ciudad != value))
				{
					if (this._ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_ciudadChanging(value);
					this.SendPropertyChanging();
					this._codigo_ciudad = value;
					this.SendPropertyChanged("codigo_ciudad");
					this.Oncodigo_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_agencia", Storage="_agencia", ThisKey="codigo_cliente", OtherKey="codigo_cliente")]
		public EntitySet<agencia> agencia
		{
			get
			{
				return this._agencia;
			}
			set
			{
				this._agencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_empresa", Storage="_empresa", ThisKey="codigo_cliente", OtherKey="codigo_cliente")]
		public EntitySet<empresa> empresa
		{
			get
			{
				return this._empresa;
			}
			set
			{
				this._empresa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_persona", Storage="_persona", ThisKey="codigo_cliente", OtherKey="codigo_cliente")]
		public EntitySet<persona> persona
		{
			get
			{
				return this._persona;
			}
			set
			{
				this._persona.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_usuario", Storage="_usuario", ThisKey="codigo_cliente", OtherKey="codigo_cliente")]
		public EntitySet<usuario> usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				this._usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_reserva", Storage="_reserva", ThisKey="codigo_cliente", OtherKey="codigo_cliente")]
		public EntitySet<reserva> reserva
		{
			get
			{
				return this._reserva;
			}
			set
			{
				this._reserva.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_cliente", Storage="_ciudad", ThisKey="codigo_ciudad", OtherKey="codigo_ciudad", IsForeignKey=true)]
		public ciudad ciudad
		{
			get
			{
				return this._ciudad.Entity;
			}
			set
			{
				ciudad previousValue = this._ciudad.Entity;
				if (((previousValue != value) 
							|| (this._ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudad.Entity = null;
						previousValue.cliente.Remove(this);
					}
					this._ciudad.Entity = value;
					if ((value != null))
					{
						value.cliente.Add(this);
						this._codigo_ciudad = value.codigo_ciudad;
					}
					else
					{
						this._codigo_ciudad = default(Nullable<int>);
					}
					this.SendPropertyChanged("ciudad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_agencia(agencia entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_agencia(agencia entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void attach_empresa(empresa entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_empresa(empresa entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void attach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void attach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void attach_reserva(reserva entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_reserva(reserva entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.consumo")]
	public partial class consumo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_consumo;
		
		private System.Nullable<int> _catidad;
		
		private System.Nullable<System.DateTime> _fecha_consumo;
		
		private string _estado;
		
		private System.Nullable<int> _codigo_servicio;
		
		private System.Nullable<decimal> _costo;
		
		private EntityRef<servicios> _servicios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_consumoChanging(int value);
    partial void Oncodigo_consumoChanged();
    partial void OncatidadChanging(System.Nullable<int> value);
    partial void OncatidadChanged();
    partial void Onfecha_consumoChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_consumoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void Oncodigo_servicioChanging(System.Nullable<int> value);
    partial void Oncodigo_servicioChanged();
    partial void OncostoChanging(System.Nullable<decimal> value);
    partial void OncostoChanged();
    #endregion
		
		public consumo()
		{
			this._servicios = default(EntityRef<servicios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_consumo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_consumo
		{
			get
			{
				return this._codigo_consumo;
			}
			set
			{
				if ((this._codigo_consumo != value))
				{
					this.Oncodigo_consumoChanging(value);
					this.SendPropertyChanging();
					this._codigo_consumo = value;
					this.SendPropertyChanged("codigo_consumo");
					this.Oncodigo_consumoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catidad", DbType="Int")]
		public System.Nullable<int> catidad
		{
			get
			{
				return this._catidad;
			}
			set
			{
				if ((this._catidad != value))
				{
					this.OncatidadChanging(value);
					this.SendPropertyChanging();
					this._catidad = value;
					this.SendPropertyChanged("catidad");
					this.OncatidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_consumo", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_consumo
		{
			get
			{
				return this._fecha_consumo;
			}
			set
			{
				if ((this._fecha_consumo != value))
				{
					this.Onfecha_consumoChanging(value);
					this.SendPropertyChanging();
					this._fecha_consumo = value;
					this.SendPropertyChanged("fecha_consumo");
					this.Onfecha_consumoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(20)")]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_servicio", DbType="Int")]
		public System.Nullable<int> codigo_servicio
		{
			get
			{
				return this._codigo_servicio;
			}
			set
			{
				if ((this._codigo_servicio != value))
				{
					if (this._servicios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_servicioChanging(value);
					this.SendPropertyChanging();
					this._codigo_servicio = value;
					this.SendPropertyChanged("codigo_servicio");
					this.Oncodigo_servicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> costo
		{
			get
			{
				return this._costo;
			}
			set
			{
				if ((this._costo != value))
				{
					this.OncostoChanging(value);
					this.SendPropertyChanging();
					this._costo = value;
					this.SendPropertyChanged("costo");
					this.OncostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicios_consumo", Storage="_servicios", ThisKey="codigo_servicio", OtherKey="codigo_servicio", IsForeignKey=true)]
		public servicios servicios
		{
			get
			{
				return this._servicios.Entity;
			}
			set
			{
				servicios previousValue = this._servicios.Entity;
				if (((previousValue != value) 
							|| (this._servicios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._servicios.Entity = null;
						previousValue.consumo.Remove(this);
					}
					this._servicios.Entity = value;
					if ((value != null))
					{
						value.consumo.Add(this);
						this._codigo_servicio = value.codigo_servicio;
					}
					else
					{
						this._codigo_servicio = default(Nullable<int>);
					}
					this.SendPropertyChanged("servicios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empresa")]
	public partial class empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_empresa;
		
		private System.Nullable<long> _nit;
		
		private string _contacto;
		
		private string _metodo_pago;
		
		private System.Nullable<int> _codigo_cliente;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_empresaChanging(int value);
    partial void Oncodigo_empresaChanged();
    partial void OnnitChanging(System.Nullable<long> value);
    partial void OnnitChanged();
    partial void OncontactoChanging(string value);
    partial void OncontactoChanged();
    partial void Onmetodo_pagoChanging(string value);
    partial void Onmetodo_pagoChanged();
    partial void Oncodigo_clienteChanging(System.Nullable<int> value);
    partial void Oncodigo_clienteChanged();
    #endregion
		
		public empresa()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_empresa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_empresa
		{
			get
			{
				return this._codigo_empresa;
			}
			set
			{
				if ((this._codigo_empresa != value))
				{
					this.Oncodigo_empresaChanging(value);
					this.SendPropertyChanging();
					this._codigo_empresa = value;
					this.SendPropertyChanged("codigo_empresa");
					this.Oncodigo_empresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="BigInt")]
		public System.Nullable<long> nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacto", DbType="VarChar(20)")]
		public string contacto
		{
			get
			{
				return this._contacto;
			}
			set
			{
				if ((this._contacto != value))
				{
					this.OncontactoChanging(value);
					this.SendPropertyChanging();
					this._contacto = value;
					this.SendPropertyChanged("contacto");
					this.OncontactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metodo_pago", DbType="VarChar(100)")]
		public string metodo_pago
		{
			get
			{
				return this._metodo_pago;
			}
			set
			{
				if ((this._metodo_pago != value))
				{
					this.Onmetodo_pagoChanging(value);
					this.SendPropertyChanging();
					this._metodo_pago = value;
					this.SendPropertyChanged("metodo_pago");
					this.Onmetodo_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", DbType="Int")]
		public System.Nullable<int> codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_empresa", Storage="_cliente", ThisKey="codigo_cliente", OtherKey="codigo_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.empresa.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.empresa.Add(this);
						this._codigo_cliente = value.codigo_cliente;
					}
					else
					{
						this._codigo_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estado")]
	public partial class estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_estado;
		
		private bool _motivo;
		
		private string _descripcion;
		
		private System.Nullable<System.DateTime> _fecha_inicio;
		
		private System.Nullable<System.DateTime> _fecha_fin;
		
		private System.Nullable<int> _codigo_habitacion;
		
		private EntityRef<habitacion> _habitacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_estadoChanging(int value);
    partial void Oncodigo_estadoChanged();
    partial void OnmotivoChanging(bool value);
    partial void OnmotivoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onfecha_inicioChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_inicioChanged();
    partial void Onfecha_finChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_finChanged();
    partial void Oncodigo_habitacionChanging(System.Nullable<int> value);
    partial void Oncodigo_habitacionChanged();
    #endregion
		
		public estado()
		{
			this._habitacion = default(EntityRef<habitacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_estado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_estado
		{
			get
			{
				return this._codigo_estado;
			}
			set
			{
				if ((this._codigo_estado != value))
				{
					this.Oncodigo_estadoChanging(value);
					this.SendPropertyChanging();
					this._codigo_estado = value;
					this.SendPropertyChanged("codigo_estado");
					this.Oncodigo_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="Bit NOT NULL")]
		public bool motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_inicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_inicio
		{
			get
			{
				return this._fecha_inicio;
			}
			set
			{
				if ((this._fecha_inicio != value))
				{
					this.Onfecha_inicioChanging(value);
					this.SendPropertyChanging();
					this._fecha_inicio = value;
					this.SendPropertyChanged("fecha_inicio");
					this.Onfecha_inicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_fin", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_fin
		{
			get
			{
				return this._fecha_fin;
			}
			set
			{
				if ((this._fecha_fin != value))
				{
					this.Onfecha_finChanging(value);
					this.SendPropertyChanging();
					this._fecha_fin = value;
					this.SendPropertyChanged("fecha_fin");
					this.Onfecha_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_habitacion", DbType="Int")]
		public System.Nullable<int> codigo_habitacion
		{
			get
			{
				return this._codigo_habitacion;
			}
			set
			{
				if ((this._codigo_habitacion != value))
				{
					if (this._habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_habitacionChanging(value);
					this.SendPropertyChanging();
					this._codigo_habitacion = value;
					this.SendPropertyChanged("codigo_habitacion");
					this.Oncodigo_habitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_estado", Storage="_habitacion", ThisKey="codigo_habitacion", OtherKey="codigo_habitacion", IsForeignKey=true)]
		public habitacion habitacion
		{
			get
			{
				return this._habitacion.Entity;
			}
			set
			{
				habitacion previousValue = this._habitacion.Entity;
				if (((previousValue != value) 
							|| (this._habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._habitacion.Entity = null;
						previousValue.estado1.Remove(this);
					}
					this._habitacion.Entity = value;
					if ((value != null))
					{
						value.estado1.Add(this);
						this._codigo_habitacion = value.codigo_habitacion;
					}
					else
					{
						this._codigo_habitacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("habitacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.habitacion")]
	public partial class habitacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_habitacion;
		
		private System.Nullable<int> _numero;
		
		private System.Nullable<int> _piso;
		
		private System.Nullable<decimal> _precio;
		
		private System.Nullable<int> _codigo_categoria;
		
		private int _estado;
		
		private EntitySet<estado> _estado1;
		
		private EntityRef<categoria> _categoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_habitacionChanging(int value);
    partial void Oncodigo_habitacionChanged();
    partial void OnnumeroChanging(System.Nullable<int> value);
    partial void OnnumeroChanged();
    partial void OnpisoChanging(System.Nullable<int> value);
    partial void OnpisoChanged();
    partial void OnprecioChanging(System.Nullable<decimal> value);
    partial void OnprecioChanged();
    partial void Oncodigo_categoriaChanging(System.Nullable<int> value);
    partial void Oncodigo_categoriaChanged();
    partial void OnestadoChanging(int value);
    partial void OnestadoChanged();
    #endregion
		
		public habitacion()
		{
			this._estado1 = new EntitySet<estado>(new Action<estado>(this.attach_estado1), new Action<estado>(this.detach_estado1));
			this._categoria = default(EntityRef<categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_habitacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_habitacion
		{
			get
			{
				return this._codigo_habitacion;
			}
			set
			{
				if ((this._codigo_habitacion != value))
				{
					this.Oncodigo_habitacionChanging(value);
					this.SendPropertyChanging();
					this._codigo_habitacion = value;
					this.SendPropertyChanged("codigo_habitacion");
					this.Oncodigo_habitacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int")]
		public System.Nullable<int> numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piso", DbType="Int")]
		public System.Nullable<int> piso
		{
			get
			{
				return this._piso;
			}
			set
			{
				if ((this._piso != value))
				{
					this.OnpisoChanging(value);
					this.SendPropertyChanging();
					this._piso = value;
					this.SendPropertyChanged("piso");
					this.OnpisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_categoria", DbType="Int")]
		public System.Nullable<int> codigo_categoria
		{
			get
			{
				return this._codigo_categoria;
			}
			set
			{
				if ((this._codigo_categoria != value))
				{
					if (this._categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_categoriaChanging(value);
					this.SendPropertyChanging();
					this._codigo_categoria = value;
					this.SendPropertyChanged("codigo_categoria");
					this.Oncodigo_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Int NOT NULL")]
		public int estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_estado", Storage="_estado1", ThisKey="codigo_habitacion", OtherKey="codigo_habitacion")]
		public EntitySet<estado> estado1
		{
			get
			{
				return this._estado1;
			}
			set
			{
				this._estado1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoria_habitacion", Storage="_categoria", ThisKey="codigo_categoria", OtherKey="codigo_categoria", IsForeignKey=true)]
		public categoria categoria
		{
			get
			{
				return this._categoria.Entity;
			}
			set
			{
				categoria previousValue = this._categoria.Entity;
				if (((previousValue != value) 
							|| (this._categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._categoria.Entity = null;
						previousValue.habitacion.Remove(this);
					}
					this._categoria.Entity = value;
					if ((value != null))
					{
						value.habitacion.Add(this);
						this._codigo_categoria = value.codigo_categoria;
					}
					else
					{
						this._codigo_categoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_estado1(estado entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = this;
		}
		
		private void detach_estado1(estado entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.habitacion_posee_servicio")]
	public partial class habitacion_posee_servicio
	{
		
		private System.Nullable<int> _codigo_habitacion;
		
		private System.Nullable<int> _codigo_servicio;
		
		public habitacion_posee_servicio()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_habitacion", DbType="Int")]
		public System.Nullable<int> codigo_habitacion
		{
			get
			{
				return this._codigo_habitacion;
			}
			set
			{
				if ((this._codigo_habitacion != value))
				{
					this._codigo_habitacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_servicio", DbType="Int")]
		public System.Nullable<int> codigo_servicio
		{
			get
			{
				return this._codigo_servicio;
			}
			set
			{
				if ((this._codigo_servicio != value))
				{
					this._codigo_servicio = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
	public partial class Memberships : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
		
		private string _Comment;
		
		private EntityRef<Applications> _Applications;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Memberships()
		{
			this._Applications = default(EntityRef<Applications>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowsStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowsStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowsStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowsStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowsStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
					this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Memberships", Storage="_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Applications Applications
		{
			get
			{
				return this._Applications.Entity;
			}
			set
			{
				Applications previousValue = this._Applications.Entity;
				if (((previousValue != value) 
							|| (this._Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applications.Entity = null;
						previousValue.Memberships.Remove(this);
					}
					this._Applications.Entity = value;
					if ((value != null))
					{
						value.Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Applications");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Memberships", Storage="_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Memberships = null;
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Memberships = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pais")]
	public partial class pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_pais;
		
		private string _nombre;
		
		private EntitySet<ciudad> _ciudad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_paisChanging(int value);
    partial void Oncodigo_paisChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public pais()
		{
			this._ciudad = new EntitySet<ciudad>(new Action<ciudad>(this.attach_ciudad), new Action<ciudad>(this.detach_ciudad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_pais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_pais
		{
			get
			{
				return this._codigo_pais;
			}
			set
			{
				if ((this._codigo_pais != value))
				{
					this.Oncodigo_paisChanging(value);
					this.SendPropertyChanging();
					this._codigo_pais = value;
					this.SendPropertyChanged("codigo_pais");
					this.Oncodigo_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pais_ciudad", Storage="_ciudad", ThisKey="codigo_pais", OtherKey="codigo_pais")]
		public EntitySet<ciudad> ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				this._ciudad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ciudad(ciudad entity)
		{
			this.SendPropertyChanging();
			entity.pais = this;
		}
		
		private void detach_ciudad(ciudad entity)
		{
			this.SendPropertyChanging();
			entity.pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persona")]
	public partial class persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_persona;
		
		private string _paterno;
		
		private string _materno;
		
		private string _pasaporte;
		
		private System.Nullable<System.DateTime> _cumpleaños;
		
		private System.Nullable<int> _codigo_cliente;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_personaChanging(int value);
    partial void Oncodigo_personaChanged();
    partial void OnpaternoChanging(string value);
    partial void OnpaternoChanged();
    partial void OnmaternoChanging(string value);
    partial void OnmaternoChanged();
    partial void OnpasaporteChanging(string value);
    partial void OnpasaporteChanged();
    partial void OncumpleañosChanging(System.Nullable<System.DateTime> value);
    partial void OncumpleañosChanged();
    partial void Oncodigo_clienteChanging(System.Nullable<int> value);
    partial void Oncodigo_clienteChanged();
    #endregion
		
		public persona()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_persona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_persona
		{
			get
			{
				return this._codigo_persona;
			}
			set
			{
				if ((this._codigo_persona != value))
				{
					this.Oncodigo_personaChanging(value);
					this.SendPropertyChanging();
					this._codigo_persona = value;
					this.SendPropertyChanged("codigo_persona");
					this.Oncodigo_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paterno", DbType="VarChar(20)")]
		public string paterno
		{
			get
			{
				return this._paterno;
			}
			set
			{
				if ((this._paterno != value))
				{
					this.OnpaternoChanging(value);
					this.SendPropertyChanging();
					this._paterno = value;
					this.SendPropertyChanged("paterno");
					this.OnpaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materno", DbType="VarChar(20)")]
		public string materno
		{
			get
			{
				return this._materno;
			}
			set
			{
				if ((this._materno != value))
				{
					this.OnmaternoChanging(value);
					this.SendPropertyChanging();
					this._materno = value;
					this.SendPropertyChanged("materno");
					this.OnmaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasaporte", DbType="VarChar(20)")]
		public string pasaporte
		{
			get
			{
				return this._pasaporte;
			}
			set
			{
				if ((this._pasaporte != value))
				{
					this.OnpasaporteChanging(value);
					this.SendPropertyChanging();
					this._pasaporte = value;
					this.SendPropertyChanged("pasaporte");
					this.OnpasaporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cumpleaños", DbType="DateTime")]
		public System.Nullable<System.DateTime> cumpleaños
		{
			get
			{
				return this._cumpleaños;
			}
			set
			{
				if ((this._cumpleaños != value))
				{
					this.OncumpleañosChanging(value);
					this.SendPropertyChanging();
					this._cumpleaños = value;
					this.SendPropertyChanged("cumpleaños");
					this.OncumpleañosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", DbType="Int")]
		public System.Nullable<int> codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_persona", Storage="_cliente", ThisKey="codigo_cliente", OtherKey="codigo_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.persona.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.persona.Add(this);
						this._codigo_cliente = value.codigo_cliente;
					}
					else
					{
						this._codigo_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValueStrings;
		
		private System.Data.Linq.Binary _PropertyValueBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValueStringsChanging(string value);
    partial void OnPropertyValueStringsChanged();
    partial void OnPropertyValueBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Profiles()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueStrings", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyValueStrings
		{
			get
			{
				return this._PropertyValueStrings;
			}
			set
			{
				if ((this._PropertyValueStrings != value))
				{
					this.OnPropertyValueStringsChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueStrings = value;
					this.SendPropertyChanged("PropertyValueStrings");
					this.OnPropertyValueStringsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValueBinary
		{
			get
			{
				return this._PropertyValueBinary;
			}
			set
			{
				if ((this._PropertyValueBinary != value))
				{
					this.OnPropertyValueBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueBinary = value;
					this.SendPropertyChanged("PropertyValueBinary");
					this.OnPropertyValueBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Profiles", Storage="_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Profiles = null;
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Profiles = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reserva_tiene_habitacion_tiene_consumo")]
	public partial class reserva_tiene_habitacion_tiene_consumo
	{
		
		private System.Nullable<int> _codigo_habitacion;
		
		private System.Nullable<int> _codigo_reserva;
		
		private System.Nullable<int> _codigo_consumo;
		
		private System.Nullable<decimal> _costo_total;
		
		private System.Nullable<System.DateTime> _fecha_pago;
		
		public reserva_tiene_habitacion_tiene_consumo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_habitacion", DbType="Int")]
		public System.Nullable<int> codigo_habitacion
		{
			get
			{
				return this._codigo_habitacion;
			}
			set
			{
				if ((this._codigo_habitacion != value))
				{
					this._codigo_habitacion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_reserva", DbType="Int")]
		public System.Nullable<int> codigo_reserva
		{
			get
			{
				return this._codigo_reserva;
			}
			set
			{
				if ((this._codigo_reserva != value))
				{
					this._codigo_reserva = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_consumo", DbType="Int")]
		public System.Nullable<int> codigo_consumo
		{
			get
			{
				return this._codigo_consumo;
			}
			set
			{
				if ((this._codigo_consumo != value))
				{
					this._codigo_consumo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo_total", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> costo_total
		{
			get
			{
				return this._costo_total;
			}
			set
			{
				if ((this._costo_total != value))
				{
					this._costo_total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_pago", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_pago
		{
			get
			{
				return this._fecha_pago;
			}
			set
			{
				if ((this._fecha_pago != value))
				{
					this._fecha_pago = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRoles> _UsersInRoles;
		
		private EntityRef<Applications> _Applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Roles()
		{
			this._UsersInRoles = new EntitySet<UsersInRoles>(new Action<UsersInRoles>(this.attach_UsersInRoles), new Action<UsersInRoles>(this.detach_UsersInRoles));
			this._Applications = default(EntityRef<Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_UsersInRoles", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRoles> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Roles", Storage="_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Applications Applications
		{
			get
			{
				return this._Applications.Entity;
			}
			set
			{
				Applications previousValue = this._Applications.Entity;
				if (((previousValue != value) 
							|| (this._Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applications.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Applications.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_UsersInRoles(UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.servicios")]
	public partial class servicios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_servicio;
		
		private string _nombre;
		
		private System.Nullable<decimal> _costo;
		
		private string _descripcion;
		
		private EntitySet<consumo> _consumo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_servicioChanging(int value);
    partial void Oncodigo_servicioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncostoChanging(System.Nullable<decimal> value);
    partial void OncostoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public servicios()
		{
			this._consumo = new EntitySet<consumo>(new Action<consumo>(this.attach_consumo), new Action<consumo>(this.detach_consumo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_servicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_servicio
		{
			get
			{
				return this._codigo_servicio;
			}
			set
			{
				if ((this._codigo_servicio != value))
				{
					this.Oncodigo_servicioChanging(value);
					this.SendPropertyChanging();
					this._codigo_servicio = value;
					this.SendPropertyChanged("codigo_servicio");
					this.Oncodigo_servicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> costo
		{
			get
			{
				return this._costo;
			}
			set
			{
				if ((this._costo != value))
				{
					this.OncostoChanging(value);
					this.SendPropertyChanging();
					this._costo = value;
					this.SendPropertyChanged("costo");
					this.OncostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(500)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicios_consumo", Storage="_consumo", ThisKey="codigo_servicio", OtherKey="codigo_servicio")]
		public EntitySet<consumo> consumo
		{
			get
			{
				return this._consumo;
			}
			set
			{
				this._consumo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_consumo(consumo entity)
		{
			this.SendPropertyChanging();
			entity.servicios = this;
		}
		
		private void detach_consumo(consumo entity)
		{
			this.SendPropertyChanging();
			entity.servicios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<Memberships> _Memberships;
		
		private EntityRef<Profiles> _Profiles;
		
		private EntitySet<UsersInRoles> _UsersInRoles;
		
		private EntitySet<usuario> _usuario;
		
		private EntityRef<Applications> _Applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public Users()
		{
			this._Memberships = default(EntityRef<Memberships>);
			this._Profiles = default(EntityRef<Profiles>);
			this._UsersInRoles = new EntitySet<UsersInRoles>(new Action<UsersInRoles>(this.attach_UsersInRoles), new Action<UsersInRoles>(this.detach_UsersInRoles));
			this._usuario = new EntitySet<usuario>(new Action<usuario>(this.attach_usuario), new Action<usuario>(this.detach_usuario));
			this._Applications = default(EntityRef<Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Memberships", Storage="_Memberships", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Memberships Memberships
		{
			get
			{
				return this._Memberships.Entity;
			}
			set
			{
				Memberships previousValue = this._Memberships.Entity;
				if (((previousValue != value) 
							|| (this._Memberships.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Memberships.Entity = null;
						previousValue.Users = null;
					}
					this._Memberships.Entity = value;
					if ((value != null))
					{
						value.Users = this;
					}
					this.SendPropertyChanged("Memberships");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Profiles", Storage="_Profiles", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Profiles Profiles
		{
			get
			{
				return this._Profiles.Entity;
			}
			set
			{
				Profiles previousValue = this._Profiles.Entity;
				if (((previousValue != value) 
							|| (this._Profiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profiles.Entity = null;
						previousValue.Users = null;
					}
					this._Profiles.Entity = value;
					if ((value != null))
					{
						value.Users = this;
					}
					this.SendPropertyChanged("Profiles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UsersInRoles", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRoles> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_usuario", Storage="_usuario", ThisKey="UserId", OtherKey="codigo_user")]
		public EntitySet<usuario> usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				this._usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Applications_Users", Storage="_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Applications Applications
		{
			get
			{
				return this._Applications.Entity;
			}
			set
			{
				Applications previousValue = this._Applications.Entity;
				if (((previousValue != value) 
							|| (this._Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Applications.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Applications.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_UsersInRoles(UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Roles> _Roles;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRoles()
		{
			this._Roles = default(EntityRef<Roles>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_UsersInRoles", Storage="_Roles", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UsersInRoles", Storage="_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_usuario;
		
		private System.Nullable<int> _codigo_cliente;
		
		private System.Guid _codigo_user;
		
		private EntityRef<cliente> _cliente;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_usuarioChanging(int value);
    partial void Oncodigo_usuarioChanged();
    partial void Oncodigo_clienteChanging(System.Nullable<int> value);
    partial void Oncodigo_clienteChanged();
    partial void Oncodigo_userChanging(System.Guid value);
    partial void Oncodigo_userChanged();
    #endregion
		
		public usuario()
		{
			this._cliente = default(EntityRef<cliente>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_usuario
		{
			get
			{
				return this._codigo_usuario;
			}
			set
			{
				if ((this._codigo_usuario != value))
				{
					this.Oncodigo_usuarioChanging(value);
					this.SendPropertyChanging();
					this._codigo_usuario = value;
					this.SendPropertyChanged("codigo_usuario");
					this.Oncodigo_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", DbType="Int")]
		public System.Nullable<int> codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_user", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid codigo_user
		{
			get
			{
				return this._codigo_user;
			}
			set
			{
				if ((this._codigo_user != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_userChanging(value);
					this.SendPropertyChanging();
					this._codigo_user = value;
					this.SendPropertyChanged("codigo_user");
					this.Oncodigo_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_usuario", Storage="_cliente", ThisKey="codigo_cliente", OtherKey="codigo_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.usuario.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.usuario.Add(this);
						this._codigo_cliente = value.codigo_cliente;
					}
					else
					{
						this._codigo_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_usuario", Storage="_Users", ThisKey="codigo_user", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.usuario.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.usuario.Add(this);
						this._codigo_user = value.UserId;
					}
					else
					{
						this._codigo_user = default(System.Guid);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reserva")]
	public partial class reserva : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codigo_reserva;
		
		private System.Nullable<System.DateTime> _fecha_inicio;
		
		private System.Nullable<System.DateTime> _fecha_fin;
		
		private int _estado;
		
		private System.Nullable<int> _codigo_cliente;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodigo_reservaChanging(int value);
    partial void Oncodigo_reservaChanged();
    partial void Onfecha_inicioChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_inicioChanged();
    partial void Onfecha_finChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_finChanged();
    partial void OnestadoChanging(int value);
    partial void OnestadoChanged();
    partial void Oncodigo_clienteChanging(System.Nullable<int> value);
    partial void Oncodigo_clienteChanged();
    #endregion
		
		public reserva()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_reserva", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codigo_reserva
		{
			get
			{
				return this._codigo_reserva;
			}
			set
			{
				if ((this._codigo_reserva != value))
				{
					this.Oncodigo_reservaChanging(value);
					this.SendPropertyChanging();
					this._codigo_reserva = value;
					this.SendPropertyChanged("codigo_reserva");
					this.Oncodigo_reservaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_inicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_inicio
		{
			get
			{
				return this._fecha_inicio;
			}
			set
			{
				if ((this._fecha_inicio != value))
				{
					this.Onfecha_inicioChanging(value);
					this.SendPropertyChanging();
					this._fecha_inicio = value;
					this.SendPropertyChanged("fecha_inicio");
					this.Onfecha_inicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_fin", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_fin
		{
			get
			{
				return this._fecha_fin;
			}
			set
			{
				if ((this._fecha_fin != value))
				{
					this.Onfecha_finChanging(value);
					this.SendPropertyChanging();
					this._fecha_fin = value;
					this.SendPropertyChanged("fecha_fin");
					this.Onfecha_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Int NOT NULL")]
		public int estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_cliente", DbType="Int")]
		public System.Nullable<int> codigo_cliente
		{
			get
			{
				return this._codigo_cliente;
			}
			set
			{
				if ((this._codigo_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodigo_clienteChanging(value);
					this.SendPropertyChanging();
					this._codigo_cliente = value;
					this.SendPropertyChanged("codigo_cliente");
					this.Oncodigo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_reserva", Storage="_cliente", ThisKey="codigo_cliente", OtherKey="codigo_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.reserva.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.reserva.Add(this);
						this._codigo_cliente = value.codigo_cliente;
					}
					else
					{
						this._codigo_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
